module TopLevel (SW, LEDR);
 input [9:0] SW;
 output [9:0] LEDR;
 wire carry0, carry1, carry2, carry3; // Internal connections for carry
 FullAdder (SW[0], SW[5], 0,  LEDR[0], carry0);
 FullAdder (SW[1], SW[6], carry0,  LEDR[1], carry1);
 FullAdder (SW[2], SW[7], carry1,  LEDR[2], carry2);
 FullAdder (SW[3], SW[8], carry2,  LEDR[3], carry3);
 FullAdder (SW[4], SW[9], carry3,  LEDR[4], LEDR[5]);
endmodule

module FullAdder (bitA, bitB, bitC, sum, carry);
 input bitA, bitB, bitC;
 output sum, carry;
 wire AB, AC, BC; // Internal connections for carry
 xor SumSig (sum, SW[0], SW[1], SW[2]); // Sum = A ^ B ^ C
 and (AB, SW[0], SW[1]);
 and (AC, SW[0], SW[2]);
 and (BC, SW[1], SW[2]);
 or CarrySig (carry, AB, AC, BC); // Carry = A & B | A & C | B & C
endmodule
